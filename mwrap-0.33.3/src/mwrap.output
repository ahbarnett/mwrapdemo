Grammar

    0 $accept: statements $end

    1 statements: statement statements
    2           | /* empty */

    3 statement: basevar '=' funcall
    4          | funcall
    5          | tdef
    6          | classdef
    7          | NON_C_LINE
    8          | error ';'

    9 tdef: TYPEDEF ID ID ';'

   10 classdef: CLASS ID ':' inheritslist ';'

   11 inheritslist: ID inheritsrest

   12 inheritsrest: ',' ID inheritsrest
   13             | /* empty */

   14 funcall: func '(' args ')' ';'

   15 args: var argsrest
   16     | /* empty */

   17 argsrest: ',' var argsrest
   18         | /* empty */

   19 basevar: ID ID
   20        | ID quals ID
   21        | ID ID aqual

   22 var: iospec ID ID
   23    | iospec ID quals ID
   24    | iospec ID ID aqual
   25    | iospec ID NUMBER
   26    | iospec ID quals NUMBER
   27    | iospec ID STRING
   28    | iospec ID quals STRING

   29 iospec: INPUT
   30       | OUTPUT
   31       | INOUT
   32       | /* empty */

   33 quals: '*'
   34      | '&'
   35      | aqual

   36 aqual: arrayspec
   37      | arrayspec '&'

   38 arrayspec: '[' exprs ']'

   39 exprs: expr exprrest
   40      | /* empty */

   41 exprrest: ',' expr exprrest
   42         | /* empty */

   43 expr: ID
   44     | NUMBER

   45 func: ID '-' '>' ID '.' ID
   46     | ID
   47     | FORTRAN ID
   48     | NEW ID


Terminals, with rules where they appear

$end (0) 0
'&' (38) 34 37
'(' (40) 14
')' (41) 14
'*' (42) 33
',' (44) 12 17 41
'-' (45) 45
'.' (46) 45
':' (58) 10
';' (59) 8 9 10 14
'=' (61) 3
'>' (62) 45
'[' (91) 38
']' (93) 38
error (256) 8
NON_C_LINE (258) 7
NEW (259) 48
TYPEDEF (260) 9
CLASS (261) 10
FORTRAN (262) 47
ID (263) 9 10 11 12 19 20 21 22 23 24 25 26 27 28 43 45 46 47 48
NUMBER (264) 25 26 44
STRING (265) 27 28
INPUT (266) 29
OUTPUT (267) 30
INOUT (268) 31


Nonterminals, with rules where they appear

$accept (27)
    on left: 0
statements (28)
    on left: 1 2, on right: 0 1
statement (29)
    on left: 3 4 5 6 7 8, on right: 1
tdef (30)
    on left: 9, on right: 5
classdef (31)
    on left: 10, on right: 6
inheritslist (32)
    on left: 11, on right: 10
inheritsrest (33)
    on left: 12 13, on right: 11 12
funcall (34)
    on left: 14, on right: 3 4
args (35)
    on left: 15 16, on right: 14
argsrest (36)
    on left: 17 18, on right: 15 17
basevar (37)
    on left: 19 20 21, on right: 3
var (38)
    on left: 22 23 24 25 26 27 28, on right: 15 17
iospec (39)
    on left: 29 30 31 32, on right: 22 23 24 25 26 27 28
quals (40)
    on left: 33 34 35, on right: 20 23 26 28
aqual (41)
    on left: 36 37, on right: 21 24 35
arrayspec (42)
    on left: 38, on right: 36 37
exprs (43)
    on left: 39 40, on right: 38
exprrest (44)
    on left: 41 42, on right: 39 41
expr (45)
    on left: 43 44, on right: 39 41
func (46)
    on left: 45 46 47 48, on right: 14


State 0

    0 $accept: . statements $end

    error       shift, and go to state 1
    NON_C_LINE  shift, and go to state 2
    NEW         shift, and go to state 3
    TYPEDEF     shift, and go to state 4
    CLASS       shift, and go to state 5
    FORTRAN     shift, and go to state 6
    ID          shift, and go to state 7

    $end  reduce using rule 2 (statements)

    statements  go to state 8
    statement   go to state 9
    tdef        go to state 10
    classdef    go to state 11
    funcall     go to state 12
    basevar     go to state 13
    func        go to state 14


State 1

    8 statement: error . ';'

    ';'  shift, and go to state 15


State 2

    7 statement: NON_C_LINE .

    $default  reduce using rule 7 (statement)


State 3

   48 func: NEW . ID

    ID  shift, and go to state 16


State 4

    9 tdef: TYPEDEF . ID ID ';'

    ID  shift, and go to state 17


State 5

   10 classdef: CLASS . ID ':' inheritslist ';'

    ID  shift, and go to state 18


State 6

   47 func: FORTRAN . ID

    ID  shift, and go to state 19


State 7

   19 basevar: ID . ID
   20        | ID . quals ID
   21        | ID . ID aqual
   45 func: ID . '-' '>' ID '.' ID
   46     | ID .

    ID   shift, and go to state 20
    '*'  shift, and go to state 21
    '&'  shift, and go to state 22
    '['  shift, and go to state 23
    '-'  shift, and go to state 24

    $default  reduce using rule 46 (func)

    quals      go to state 25
    aqual      go to state 26
    arrayspec  go to state 27


State 8

    0 $accept: statements . $end

    $end  shift, and go to state 28


State 9

    1 statements: statement . statements

    error       shift, and go to state 1
    NON_C_LINE  shift, and go to state 2
    NEW         shift, and go to state 3
    TYPEDEF     shift, and go to state 4
    CLASS       shift, and go to state 5
    FORTRAN     shift, and go to state 6
    ID          shift, and go to state 7

    $end  reduce using rule 2 (statements)

    statements  go to state 29
    statement   go to state 9
    tdef        go to state 10
    classdef    go to state 11
    funcall     go to state 12
    basevar     go to state 13
    func        go to state 14


State 10

    5 statement: tdef .

    $default  reduce using rule 5 (statement)


State 11

    6 statement: classdef .

    $default  reduce using rule 6 (statement)


State 12

    4 statement: funcall .

    $default  reduce using rule 4 (statement)


State 13

    3 statement: basevar . '=' funcall

    '='  shift, and go to state 30


State 14

   14 funcall: func . '(' args ')' ';'

    '('  shift, and go to state 31


State 15

    8 statement: error ';' .

    $default  reduce using rule 8 (statement)


State 16

   48 func: NEW ID .

    $default  reduce using rule 48 (func)


State 17

    9 tdef: TYPEDEF ID . ID ';'

    ID  shift, and go to state 32


State 18

   10 classdef: CLASS ID . ':' inheritslist ';'

    ':'  shift, and go to state 33


State 19

   47 func: FORTRAN ID .

    $default  reduce using rule 47 (func)


State 20

   19 basevar: ID ID .
   21        | ID ID . aqual

    '['  shift, and go to state 23

    $default  reduce using rule 19 (basevar)

    aqual      go to state 34
    arrayspec  go to state 27


State 21

   33 quals: '*' .

    $default  reduce using rule 33 (quals)


State 22

   34 quals: '&' .

    $default  reduce using rule 34 (quals)


State 23

   38 arrayspec: '[' . exprs ']'

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 36

    $default  reduce using rule 40 (exprs)

    exprs  go to state 37
    expr   go to state 38


State 24

   45 func: ID '-' . '>' ID '.' ID

    '>'  shift, and go to state 39


State 25

   20 basevar: ID quals . ID

    ID  shift, and go to state 40


State 26

   35 quals: aqual .

    $default  reduce using rule 35 (quals)


State 27

   36 aqual: arrayspec .
   37      | arrayspec . '&'

    '&'  shift, and go to state 41

    $default  reduce using rule 36 (aqual)


State 28

    0 $accept: statements $end .

    $default  accept


State 29

    1 statements: statement statements .

    $default  reduce using rule 1 (statements)


State 30

    3 statement: basevar '=' . funcall

    NEW      shift, and go to state 3
    FORTRAN  shift, and go to state 6
    ID       shift, and go to state 42

    funcall  go to state 43
    func     go to state 14


State 31

   14 funcall: func '(' . args ')' ';'

    INPUT   shift, and go to state 44
    OUTPUT  shift, and go to state 45
    INOUT   shift, and go to state 46

    ID        reduce using rule 32 (iospec)
    $default  reduce using rule 16 (args)

    args    go to state 47
    var     go to state 48
    iospec  go to state 49


State 32

    9 tdef: TYPEDEF ID ID . ';'

    ';'  shift, and go to state 50


State 33

   10 classdef: CLASS ID ':' . inheritslist ';'

    ID  shift, and go to state 51

    inheritslist  go to state 52


State 34

   21 basevar: ID ID aqual .

    $default  reduce using rule 21 (basevar)


State 35

   43 expr: ID .

    $default  reduce using rule 43 (expr)


State 36

   44 expr: NUMBER .

    $default  reduce using rule 44 (expr)


State 37

   38 arrayspec: '[' exprs . ']'

    ']'  shift, and go to state 53


State 38

   39 exprs: expr . exprrest

    ','  shift, and go to state 54

    $default  reduce using rule 42 (exprrest)

    exprrest  go to state 55


State 39

   45 func: ID '-' '>' . ID '.' ID

    ID  shift, and go to state 56


State 40

   20 basevar: ID quals ID .

    $default  reduce using rule 20 (basevar)


State 41

   37 aqual: arrayspec '&' .

    $default  reduce using rule 37 (aqual)


State 42

   45 func: ID . '-' '>' ID '.' ID
   46     | ID .

    '-'  shift, and go to state 24

    $default  reduce using rule 46 (func)


State 43

    3 statement: basevar '=' funcall .

    $default  reduce using rule 3 (statement)


State 44

   29 iospec: INPUT .

    $default  reduce using rule 29 (iospec)


State 45

   30 iospec: OUTPUT .

    $default  reduce using rule 30 (iospec)


State 46

   31 iospec: INOUT .

    $default  reduce using rule 31 (iospec)


State 47

   14 funcall: func '(' args . ')' ';'

    ')'  shift, and go to state 57


State 48

   15 args: var . argsrest

    ','  shift, and go to state 58

    $default  reduce using rule 18 (argsrest)

    argsrest  go to state 59


State 49

   22 var: iospec . ID ID
   23    | iospec . ID quals ID
   24    | iospec . ID ID aqual
   25    | iospec . ID NUMBER
   26    | iospec . ID quals NUMBER
   27    | iospec . ID STRING
   28    | iospec . ID quals STRING

    ID  shift, and go to state 60


State 50

    9 tdef: TYPEDEF ID ID ';' .

    $default  reduce using rule 9 (tdef)


State 51

   11 inheritslist: ID . inheritsrest

    ','  shift, and go to state 61

    $default  reduce using rule 13 (inheritsrest)

    inheritsrest  go to state 62


State 52

   10 classdef: CLASS ID ':' inheritslist . ';'

    ';'  shift, and go to state 63


State 53

   38 arrayspec: '[' exprs ']' .

    $default  reduce using rule 38 (arrayspec)


State 54

   41 exprrest: ',' . expr exprrest

    ID      shift, and go to state 35
    NUMBER  shift, and go to state 36

    expr  go to state 64


State 55

   39 exprs: expr exprrest .

    $default  reduce using rule 39 (exprs)


State 56

   45 func: ID '-' '>' ID . '.' ID

    '.'  shift, and go to state 65


State 57

   14 funcall: func '(' args ')' . ';'

    ';'  shift, and go to state 66


State 58

   17 argsrest: ',' . var argsrest

    INPUT   shift, and go to state 44
    OUTPUT  shift, and go to state 45
    INOUT   shift, and go to state 46

    $default  reduce using rule 32 (iospec)

    var     go to state 67
    iospec  go to state 49


State 59

   15 args: var argsrest .

    $default  reduce using rule 15 (args)


State 60

   22 var: iospec ID . ID
   23    | iospec ID . quals ID
   24    | iospec ID . ID aqual
   25    | iospec ID . NUMBER
   26    | iospec ID . quals NUMBER
   27    | iospec ID . STRING
   28    | iospec ID . quals STRING

    ID      shift, and go to state 68
    NUMBER  shift, and go to state 69
    STRING  shift, and go to state 70
    '*'     shift, and go to state 21
    '&'     shift, and go to state 22
    '['     shift, and go to state 23

    quals      go to state 71
    aqual      go to state 26
    arrayspec  go to state 27


State 61

   12 inheritsrest: ',' . ID inheritsrest

    ID  shift, and go to state 72


State 62

   11 inheritslist: ID inheritsrest .

    $default  reduce using rule 11 (inheritslist)


State 63

   10 classdef: CLASS ID ':' inheritslist ';' .

    $default  reduce using rule 10 (classdef)


State 64

   41 exprrest: ',' expr . exprrest

    ','  shift, and go to state 54

    $default  reduce using rule 42 (exprrest)

    exprrest  go to state 73


State 65

   45 func: ID '-' '>' ID '.' . ID

    ID  shift, and go to state 74


State 66

   14 funcall: func '(' args ')' ';' .

    $default  reduce using rule 14 (funcall)


State 67

   17 argsrest: ',' var . argsrest

    ','  shift, and go to state 58

    $default  reduce using rule 18 (argsrest)

    argsrest  go to state 75


State 68

   22 var: iospec ID ID .
   24    | iospec ID ID . aqual

    '['  shift, and go to state 23

    $default  reduce using rule 22 (var)

    aqual      go to state 76
    arrayspec  go to state 27


State 69

   25 var: iospec ID NUMBER .

    $default  reduce using rule 25 (var)


State 70

   27 var: iospec ID STRING .

    $default  reduce using rule 27 (var)


State 71

   23 var: iospec ID quals . ID
   26    | iospec ID quals . NUMBER
   28    | iospec ID quals . STRING

    ID      shift, and go to state 77
    NUMBER  shift, and go to state 78
    STRING  shift, and go to state 79


State 72

   12 inheritsrest: ',' ID . inheritsrest

    ','  shift, and go to state 61

    $default  reduce using rule 13 (inheritsrest)

    inheritsrest  go to state 80


State 73

   41 exprrest: ',' expr exprrest .

    $default  reduce using rule 41 (exprrest)


State 74

   45 func: ID '-' '>' ID '.' ID .

    $default  reduce using rule 45 (func)


State 75

   17 argsrest: ',' var argsrest .

    $default  reduce using rule 17 (argsrest)


State 76

   24 var: iospec ID ID aqual .

    $default  reduce using rule 24 (var)


State 77

   23 var: iospec ID quals ID .

    $default  reduce using rule 23 (var)


State 78

   26 var: iospec ID quals NUMBER .

    $default  reduce using rule 26 (var)


State 79

   28 var: iospec ID quals STRING .

    $default  reduce using rule 28 (var)


State 80

   12 inheritsrest: ',' ID inheritsrest .

    $default  reduce using rule 12 (inheritsrest)
